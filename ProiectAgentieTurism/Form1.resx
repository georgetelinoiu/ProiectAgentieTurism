<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnTur.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>